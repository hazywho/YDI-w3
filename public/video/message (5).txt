import React, { useState, useRef, useEffect } from 'react';

// --- CHILD COMPONENTS (UNCHANGED) ---

const FadingBackgrounds = ({ sections, activeSectionId }) => {
  return (
    <div className="fixed inset-0 z-0">
      {sections.map(section => (
        <div
          key={section.id}
          className="absolute inset-0 transition-opacity duration-1000 ease-in-out"
          style={{
            opacity: activeSectionId === section.id ? 1 : 0,
          }}
        >
          <div
            className="absolute inset-0 bg-cover bg-center"
            style={{ backgroundImage: `url(${section.backgroundMedia})` }}
          />
          <div className="absolute inset-0 bg-black opacity-60" />
        </div>
      ))}
    </div>
  );
};

export const BentoTilt = ({ children, className = "" }) => {
  const [transformStyle, setTransformStyle] = useState("");
  const itemRef = useRef(null);
  const handleMouseMove = (event) => {
    if (!itemRef.current) return;
    const { left, top, width, height } = itemRef.current.getBoundingClientRect();
    const relativeX = (event.clientX - left) / width;
    const relativeY = (event.clientY - top) / height;
    const tiltX = (relativeY - 0.5) * 5;
    const tiltY = (relativeX - 0.5) * -5;
    const newTransform = `perspective(700px) rotateX(${tiltX}deg) rotateY(${tiltY}deg) scale3d(.98, .98, .98)`;
    setTransformStyle(newTransform);
  };
  const handleMouseLeave = () => setTransformStyle("");
  return (
    <div
      ref={itemRef}
      className={`${className}`}
      onMouseMove={handleMouseMove}
      onMouseLeave={handleMouseLeave}
      style={{ transform: transformStyle, transition: 'transform 0.1s ease-out' }}
    >
      {children}
    </div>
  );
};

export const BentoCard = ({ src, title, description, number }) => {
  return (
    <div className="relative size-full overflow-hidden rounded-lg shadow-xl bg-black/20">
      <img src={src} alt={title} className="absolute left-0 top-0 size-full object-cover" onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/800x500/000/FFF?text=MEDIA+LOAD+ERROR"; }} />
      <div className="relative z-10 flex size-full flex-col justify-between p-5 text-white bg-black/40 hover:bg-black/20 transition-colors duration-300">
        <div>
          {number && <p className="text-4xl md:text-5xl font-bold mb-2">{number}</p>}
          <h1 className="bento-title font-black text-5xl md:text-6xl lg:text-7xl leading-tight text-white">{title}</h1>
          {description && <p className="mt-3 text-lg md:text-xl text-white opacity-90">{description}</p>}
        </div>
      </div>
    </div>
  );
};


// --- TIMELINE COMPONENT (MODIFIED) ---

const LifestyleContent = () => {
    const [sections, setSections] = useState([
        { id: 'section-fashion', number: '01', title: 'Fashion', description: `A trendsetter, known for elaborate hairstyles and gowns.`, mediaPosition: 'right', backgroundMedia: "https://images.unsplash.com/photo-1598970779438-ea610213769b?q=80&w=2574&auto=format&fit=crop", isActive: false },
        { id: 'section-entertainment', number: '02', title: 'Leisure', description: "Enjoyed balls, theater, and social events at court.", mediaPosition: 'left', backgroundMedia: "https://images.unsplash.com/photo-1542037104857-e699d256d05f?q=80&w=2574&auto=format&fit=crop", isActive: false },
        { id: 'section-politics', number: '03', title: 'Politics', description: `Played a role in French politics, as Louis XVI was often indecisive.`, mediaPosition: 'right', backgroundMedia: "https://images.unsplash.com/photo-1520106212299-d99c443e4568?q=80&w=2574&auto=format&fit=crop", isActive: false },
        { id: 'section-private-life', number: '04', title: 'Private Life', description: `A more private side away from the court.`, mediaPosition: 'left', backgroundMedia: "https://images.unsplash.com/photo-1534438327276-14e5300c3a48?q=80&w=2670&auto=format&fit=crop", isActive: false },
    ]);
    
    const [isTimelineVisible, setIsTimelineVisible] = useState(false);
    
    const timelineRef = useRef(null);
    const sectionRefs = useRef({});

    useEffect(() => {
        // MODIFICATION: Changed threshold back to 0.2 (20%) for reliable visibility detection.
        const observer = new IntersectionObserver(([entry]) => {
            setIsTimelineVisible(entry.isIntersecting);
        }, { threshold: 0.2 });
        const currentTimelineRef = timelineRef.current;
        if (currentTimelineRef) observer.observe(currentTimelineRef);
        return () => { if (currentTimelineRef) observer.unobserve(currentTimelineRef); };
    }, []);

    useEffect(() => {
        const observerOptions = { root: null, rootMargin: '0px', threshold: 0.5 };
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    setSections(prev => prev.map(s => ({ ...s, isActive: s.id === entry.target.id })));
                }
            });
        }, observerOptions);
        const currentSectionRefs = Object.values(sectionRefs.current);
        currentSectionRefs.forEach(el => { if (el) observer.observe(el); });
        return () => { currentSectionRefs.forEach(el => { if (el) observer.unobserve(el); }); };
    }, []);

    const activeSection = sections.find(s => s.isActive);
    const activeIndex = sections.findIndex(s => s.isActive);

    const progressPercentage = activeIndex > 0 ? (activeIndex / (sections.length - 1)) * 100 : 0;

    return (
        <div ref={timelineRef}>
            {isTimelineVisible && (
                <FadingBackgrounds sections={sections} activeSectionId={activeSection?.id} />
            )}
            
            <div className="relative flex flex-col font-sans text-white snap-y snap-mandatory scroll-smooth">
                <div 
                    className="absolute left-1/2 transform -translate-x-1/2 z-20"
                    style={{
                        top: '50vh', 
                        height: `calc((${sections.length} - 1) * 100vh)`, 
                    }}
                >
                    <div 
                      className="w-1.5 h-full"
                      style={{
                        backgroundColor: 'rgba(255, 255, 255, 0.2)',
                        boxShadow: '0 0 10px rgba(255, 255, 255, 0.5)'
                      }}
                    />
                    <div 
                      className="absolute top-0 left-0 w-1.5"
                      style={{
                        height: `${progressPercentage}%`,
                        backgroundColor: '#A37C40',
                        boxShadow: '0 0 10px #A37C40',
                        transition: 'height 1s cubic-bezier(0.42, 0, 0.58, 1)',
                      }}
                    />
                </div>
                
                {sections.map((section, index) => {
                    const isPastNode = activeIndex > -1 && index < activeIndex;
                    const nodeColor = section.isActive || isPastNode ? '#A37C40' : 'white';

                    return (
                        <section
                            key={section.id}
                            id={section.id}
                            ref={el => sectionRefs.current[section.id] = el}
                            className="relative flex flex-row items-center justify-center min-h-screen snap-start w-full px-8 py-16 md:px-24 md:py-24 z-30"
                        >
                            <div className="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 z-30 w-6 h-6 rounded-full flex items-center justify-center" style={{ backgroundColor: nodeColor, border: '2px solid white', transition: 'background-color 0.5s ease-in-out' }}>
                            </div>
                            
                            <div className="w-full h-full transition-opacity duration-700" style={{ opacity: section.isActive ? 1 : 0, pointerEvents: section.isActive ? 'auto' : 'none' }}>
                                {section.isActive && (
                                    <>
                                        {section.mediaPosition === 'left' && (
                                            <div className="w-full flex justify-start">
                                                <div className="w-full md:w-6/12 -ml-4 md:-ml-8"><BentoTilt className="w-full"><BentoCard {...section} src={section.backgroundMedia} /></BentoTilt></div>
                                            </div>
                                        )}
                                        {section.mediaPosition === 'right' && (
                                            <div className="w-full flex justify-end">
                                                <div className="w-full md:w-6/12 -mr-4 md:-mr-8"><BentoTilt className="w-full"><BentoCard {...section} src={section.backgroundMedia} /></BentoTilt></div>
                                            </div>
                                        )}
                                    </>
                                )}
                            </div>
                        </section>
                    );
                })}
            </div>
        </div>
    );
};

// --- MAIN APP COMPONENT (UNCHANGED) ---
const App = () => {
    return (
        <div className="bg-gray-900">
            <div className="h-screen bg-gray-900 flex flex-col items-center justify-center text-center p-8">
                <h1 className="text-5xl font-bold text-white mb-4">Content Before The Timeline</h1>
                <p className="text-xl text-gray-400">This area has its own background and is not affected by the timeline's fading images.</p>
                <p className="text-gray-500 mt-8 animate-bounce">↓ Scroll Down ↓</p>
            </div>
            
            <LifestyleContent />
            
            <div className="h-screen bg-gray-900 flex items-center justify-center">
                 <h1 className="text-5xl font-bold text-white">Content After The Timeline</h1>
            </div>
        </div>
    );
};

export default App;
